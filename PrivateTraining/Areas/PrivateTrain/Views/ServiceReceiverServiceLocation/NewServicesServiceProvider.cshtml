
@model PrivateTraining.DomainClasses.Entities.Security.ServiceReceiverInfo
@{
    ViewBag.Title = "لیست خدمات جدید درخواست شده ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .dataTables_wrapper .table thead > tr > th {
        border-bottom-width: 2px !important;
    }
</style>

<div>

    <service-buy-list-directive>

    </service-buy-list-directive>

    <!--<div class="row">-->
        <!--<div class="widget-body">-->
            <!--<div class="filters " style="clear:both">-->
                <!--<div class="col-md-2 ">-->
                    <!--<div class="row PaddingBottom">-->
                        <!--<label style="padding-left: 8px;">وضعیت </label>-->
                        <!--<select class="input-sm" ng-model="Status" name="Status" ng-change="Realod()" style="width:115px;">-->
                            <!--<option value="8" ng-selected="true">همه</option>-->
                            <!--<option value="0">درحال بررسی</option>-->
                            <!--<option value="1">موافق</option>-->
                            <!--<option value="6">غیرقطعی</option>-->
                        <!--</select>-->
                    <!--</div>-->
                <!--</div>-->

            <!--</div>-->




            <!--<div ng-controller="MainCtrl as list">-->
                <!--<table datatable="" dt-options="list.dtOptions" dt-columns="list.dtColumns" dt-instance="list.dtInstance" class="table table-hover table-responsive ng-isolate-scope dataTable table-bordered table-striped"></table>-->
            <!--</div>-->

        <!--</div>-->
    <!--</div>-->

</div>

@Html.Partial("_informationservicereceiver")
@*@Html.Partial("_SelectWorkUnit")*@

@section scripts{

    <script>
        $(".ServiceReceiverServiceLocation-NewServicesServiceProvider").addClass("active").parents("li").addClass("open");

        app = angular.module("App", ['datatables']);
        app.controller('MainCtrl', function ($scope, $http, $compile, DTOptionsBuilder, DTColumnBuilder, DTInstances) {
            //---------------------------------------------------
            return

            if ($scope.Status == undefined) {
                $scope.Status = 8;
            }
            $scope.IsShowInfo = false;
            vm = this;
            vm.dtOptions = DTOptionsBuilder.newOptions()
           .withOption('ajax', {
               url: "@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.ListServicesServiceProvider())",
               type: 'POST',
               data: function (data) {
                   data.Status = $scope.Status;
               },
               error: function (xhr, ajaxOptions, thrownError) {
                   NotifyCustom(xhr.responseText, 'danger');
               }
           })
         .withDataProp('data')
         .withOption('processing', true)
         .withOption('serverSide', true)
         .withOption('fnRowCallback', function (nRow, aData, iDisplayIndex, iDisplayIndexFull) { $compile(nRow)($scope) })
         .withPaginationType('full_numbers')
         .withOption('aaSorting', [0, 'desc'])
         .withOption('dom', '<"pull-left"f>ltpr')
         .withDisplayLength(10);

            vm.dtColumns = [
                DTColumnBuilder.newColumn([0]).withTitle(' کد ').withOption('name', 'Id'),
                DTColumnBuilder.newColumn([1]).withTitle(' خدمت ').withOption('name', ''),
                DTColumnBuilder.newColumn([2]).withTitle('محل ').withOption('name', ''),
                DTColumnBuilder.newColumn([5]).withTitle('تاریخ ثبت  ').withOption("width", "100px"),
                DTColumnBuilder.newColumn(null).withTitle('وضعیت').notSortable()
                .renderWith(function (data, type, full, meta) {
                    if (data[4] == 0) {
                      //  $scope.IsShowInfo = false;
                        return "<a class=\"btn btn-success \" href=\"javascript:void(0);\" ng-click=\"ChangeStatus(1," + data[0] + ")\" style=\" margin-left:8px\">موافق <i class=\"fa fa-check right\"></i></a>" +
                                "<a class=\"btn btn-danger  \" href=\"javascript:void(0);\"  ng-click=\"RefrenceRequest(" + data[0] + ")\">مخالف <i class=\"fa fa-times\"></i></a>";
                    }
                    else if (data[4] == 1) {
                        return "<a class=\"btn btn-success  \" href=\"javascript:void(0);\" ng-click=\"ChangeStatus(2," + data[0] + ")\"  style=\" margin-left:8px\">قطعی <i class=\"fa fa-check right\"></i></a>" +
                               "<a class=\"btn btn-danger \" href=\"javascript:void(0);\" ng-click=\"ChangeStatus(6," + data[0] + ")\">انصراف <i class=\"fa fa-times\"></i></a>";
                    }
                    else if (data[4] == 6) {
                        return "<span  style=\"padding-right:20px\">غیرقطعی</span>";
                    }
                    else {
                        return "<span  style=\"padding-right:20px\">-</span>";
                    }
                }).withOption("width", "250px"),

                 DTColumnBuilder.newColumn(null).withTitle(' اطلاعات مشتری').notSortable()
                //.renderWith(function (data, type, full, meta) {
                //   // if (data[4] != 0) {
                //    return "<div class=\"btn btn-info \"  ng-click=\"ShowInformation(" + data[3] + "," + data[4] + ")\">اطلاعات مشتری</div>";
                //  //  }
                //  //  else return "";
                //}),
                .renderWith(function (data, type, full, meta) {
                    return "<div class=\"btn btn-info btn-circle btn-sm shiny\"  ng-click=\"ShowInformation(" + data[3] + "," + data[4] + "," + data[0] + ")\">" +
                        "<i class=\"fa fa-info\"></i></div>" + data[7];
                }),

            ];

            DTInstances.getLast().then(function (dtInstance) {
                vm.dtInstance = dtInstance;
            });
            $scope.Realod = function (event, loadedDT) {
                vm.dtInstance.reloadData();
            }

            $scope.ChangeStatus = function (status, id) {
               
                    $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.ChangeStatusRequest())', { "ServiceReceiverServiceLocationId": id, "Status": status }).success(function (response) {
                        if (response.Resualt) {
                            $scope.Realod();
                            NotifyCustom(response.Messages, 'success');

                        }
                        else {
                            NotifyCustom(response.Messages, 'danger');
                        }
                    });
                
            }
            $scope.RefrenceRequest = function (id) {
                $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.RefrenceServiceReceiverServiceLocations())', { "Id": id }).success(function (response) {

                    if (response.Resualt) {
                        $scope.Realod();
                        NotifyCustom(response.Messages, 'success');

                    }
                    else {
                        NotifyCustom(response.Messages, 'danger');
                    }
                });
            }

            $scope.changestatusCertain = function (status,id) {
                var IdWorkUnitTemp = $('input[name="WorkUnitRadio"]:checked').val();
                $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.ChangeStatusRequest())', { "ServiceReceiverServiceLocationId": id, "Status": status, "WorkUnitId": IdWorkUnitTemp }).success(function (response) {
                    if (response.Resualt) {
                        $scope.Realod();
                        NotifyCustom(response.Messages, 'success');

                    }
                    else {
                        NotifyCustom(response.Messages, 'danger');
                    }
                });
                $("#SelectWorkUnit").modal("hide");

            }


            $scope.ShowInformation = function (ReceiverId,status, buyServiceId) {

                return $scope.$root.serviceReceiverInfoDialogShow(ReceiverId, status, buyServiceId)

                $("#InformationUser").modal("show");

                $scope.getChats(buyServiceId)
                $http.post('@Url.Action(MVC.Account.Actions.LoadEditServiceReciever())', { "serviceReceiverId": ReceiverId }).success(function (response) {

                    if (response.Result) {
                        if (status != 0)
                            $scope.$parent.IsShowInfo = true;
                        else
                            $scope.$parent.IsShowInfo = false;

                        $scope.$parent.User = response.TempUser;

                        $scope.model.user = response.TempUser;
                        $scope.model.receiverId = ReceiverId;
                        $scope.model.buyServiceId = buyServiceId;

                    }

                });
            }

            $scope.model = {}
            $scope.getChats = function () {
                const buyServiceId = $scope.model.buyServiceId
                waitingDialog.show("درحال دریافت اطلاعات...");

                $http.post('/v1/PrivateTraining/GetChatList', {buyServiceId: buyServiceId})
                    .success(function (response) {
                        if (response.result == 'done') {
                            $scope.model.chatList = response.chatList
                        }

                        response.message && NotifyCustom(response.message, 'danger');
                    }).finally(function () {
                    waitingDialog.hide();
                });
            }

            $scope.addChat = function (chatMsg) {
                waitingDialog.show("درحال دریافت اطلاعات...");

                let date = new Date().toLocaleDateString('fa-IR',{year:'numeric',month:'2-digit',day:'2-digit',formatMatcher:'basic', hour:'2-digit', minute:'2-digit'})
                date = date.replace('،', '  ')

                // $scope.model.receiverId == $scope.model.user.ServiceProviderId ? ''
                let type = 'cutomer'

                const chat = {
                    date,
                    type,
                    text: chatMsg
                }

                const buyServiceId = $scope.model.buyServiceId
                $http.post('/v1/PrivateTraining/AddChat', {buyServiceId:buyServiceId, chat:chat})
                    .success(function (response) {
                        if (response.result == 'done') {
                        }

                        response.message && NotifyCustom(response.message, 'danger');
                    }).finally(function () {
                    waitingDialog.hide();
                });

                $scope.model.description = ''
            }

        });

    </script>

}




