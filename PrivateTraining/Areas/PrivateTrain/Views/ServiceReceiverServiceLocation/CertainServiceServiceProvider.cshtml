
@model PrivateTraining.DomainClasses.Entities.Security.ServiceReceiverInfo
@{
    ViewBag.Title = "لیست خدمات قطعی درخواست شده ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .dataTables_wrapper .table thead > tr > th {
        border-bottom-width: 2px !important;
    }

    .dataTables_wrapper #DataTables_Table_0 {
        width: 100% !important;
    }
</style>

<div>
    <div class="row">
        <div class="widget-body">
            <div class="filters " style="clear:both">
                <div class="col-md-2 ">
                    <div class="row PaddingBottom">
                        <label style="padding-left: 8px;">وضعیت </label>
                        <select class="input-sm" ng-model="Status" name="Status" ng-change="Realod()" style="width:115px;">
                            <option value="7" ng-selected="true">همه</option>
                            <option value="2">قطعی شده</option>
                            <option value="3">ناتمام</option>
                        </select>
                    </div>
                </div>

            </div>

            <div ng-controller="MainCtrl as list">
                <table datatable="" dt-options="list.dtOptions" dt-columns="list.dtColumns" dt-instance="list.dtInstance" class="table table-hover table-responsive ng-isolate-scope dataTable table-bordered table-striped"></table>
            </div>

        </div>
    </div>

</div>
@Html.Partial("_informationservicereceiver")
@Html.Partial("_AddServiceReceiverServiceLocationTime")
@Html.Partial("_ListServiceRequests")

@section scripts{

    <script>
        $("#DateNextMeetingid").hide();
        $("#FromTimeNextMeetingid").hide();
        $("#ToTimeNextMeetingid").hide();
        $(".ServiceReceiverServiceLocation-CertainServiceServiceProvider").addClass("active").parents("li").addClass("open");
        var TemoServiceId = 0;

        app = angular.module("App", ['datatables']);
        app.controller('MainCtrl', function ($scope, $http, $compile, DTOptionsBuilder, DTColumnBuilder, DTInstances) {

            $scope.IsShowInfo = true;

            //---------------------------------------------------
            if ($scope.Status == undefined) {
                $scope.Status = 7;
            }
            vm = this;
            vm.dtOptions = DTOptionsBuilder.newOptions()
           .withOption('ajax', {
               url: "@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.ListServicesServiceProvider())",
               type: 'POST',
               data: function (data) {
                   data.Status = $scope.Status;
               },
               error: function (xhr, ajaxOptions, thrownError) {
                   NotifyCustom(xhr.responseText, 'danger');
               }
           })
         .withDataProp('data')
         .withOption('processing', true)
         .withOption('serverSide', true)
         .withOption('fnRowCallback', function (nRow, aData, iDisplayIndex, iDisplayIndexFull) { $compile(nRow)($scope) })
         .withPaginationType('full_numbers')
         .withOption('aaSorting', [0, 'desc'])
         .withOption('dom', '<"pull-left"f>ltpr')
         .withDisplayLength(10);

            vm.dtColumns = [
                         DTColumnBuilder.newColumn([0]).withTitle(' کد ').withOption('name', 'Id'),
                DTColumnBuilder.newColumn([1]).withTitle(' خدمت ').withOption('name', '').withOption("width", "160px"),
                DTColumnBuilder.newColumn([2]).withTitle('محل ').withOption('name', '').withOption("width", "160px"),
                DTColumnBuilder.newColumn([5]).withTitle('تاریخ ثبت ').withOption("width", "80px"),
                DTColumnBuilder.newColumn(null).withTitle('وضعیت').notSortable()
                .renderWith(function (data, type, full, meta) {

                    if (data[4] == 2) {
                        return "<span style=\"padding-right:20px\">قطعی شده</span>";
                    }
                    else if (data[4] == 3) {
                        return "<span  style=\"padding-right:20px\">ناتمام</span>";
                    }
                    else {
                        return "<span  style=\"padding-right:20px\">-</span>";
                    }
                }).withOption("width", "250px"),

                 DTColumnBuilder.newColumn(null).withTitle(' اطلاعات مشتری').notSortable()
                //.renderWith(function (data, type, full, meta) {
                //    if (data[4] != 0) {
                //        return "<div class=\"btn btn-info \"  ng-click=\"ShowInformation(" + data[3] + ")\">اطلاعات مشتری</div>";
                //    }
                //    else return "";
                //}).withOption("width", "150px"),
                .renderWith(function (data, type, full, meta) {
                    return "<div class=\"btn btn-info btn-circle btn-sm shiny\"  ng-click=\"ShowInformation(" + data[3] + "," + data[4] + ")\">" +
                        "<i class=\"fa fa-info\"></i></div>" + data[7];
                }),

                 DTColumnBuilder.newColumn(null).withTitle(' ثبت ارائه خدمت').notSortable()
                .renderWith(function (data, type, full, meta) {
                    return "<div class=\"btn btn-success\"  ng-click=\"ShowAddServiceProvidedTime(" + data[0] + ","+data[8]+")\">ثبت ارائه خدمت</div>";
                }).withOption("width", "120px"),

                  DTColumnBuilder.newColumn(null).withTitle('عملیات').notSortable()
                .renderWith(function (data, type, full, meta) {
                    var x = "<div class=\"btn btn-warning  \"  ng-click=\"ShowTimeService(" + data[0] + ")\">ساعات ارائه خدمت</div>";
                    if (data[4] ==3) {
                        x = x + " | <div class=\"btn btn-magenta  \"  ng-click=\"ChangeStatusToFinal(4," + data[0] + ")\">اتمام</div>";
                    }
                    return x;
                }).withOption("width", "280px"), 

            ];

            DTInstances.getLast().then(function (dtInstance) {
                vm.dtInstance = dtInstance;
            });
            $scope.Realod = function (event, loadedDT) {
                vm.dtInstance.reloadData();
            }

            $scope.NextMeeting = {};
            $scope.ChangeStatus = function (status, id) {
                $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.ChangeStatusRequest())', { "ServiceReceiverServiceLocationId": id, "Status": status }).success(function (response) {

                    if (response.Resualt) {
                        $scope.Realod();
                        NotifyCustom(response.Messages, 'success');

                    }
                    else {
                        NotifyCustom(response.Messages, 'danger');
                    }
                });
            }
            $scope.RefrenceRequest = function (id) {
                $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.RefrenceServiceReceiverServiceLocations())', { "Id": id }).success(function (response) {

                    if (response.Resualt) {
                        $scope.Realod();
                        NotifyCustom(response.Messages, 'success');

                    }
                    else {
                        NotifyCustom(response.Messages, 'danger');
                    }
                });
            }
            $scope.ShowInformation = function (ReceiverId) {
                $("#InformationUser").modal("show");

                $http.post('@Url.Action(MVC.Account.Actions.LoadEditServiceReciever())', { "serviceReceiverId": ReceiverId }).success(function (response) {

                    if (response.Result) {
                        $scope.$parent.User = response.TempUser;
                    }

                });
            }
            $scope.ServiceReceiverServiceLocationTime = {};


            $scope.ShowAddServiceProvidedTime = function (RequestId,ServiceId) {
                $("#AddTimeServiceProvided").modal("show");
                $scope.$parent.ServiceReceiverServiceLocationTime.ServiceReceiverServiceLocationId = RequestId;
                $("#PriceCalcBySystem").text("");
                TemoServiceId = ServiceId;
            }

            $scope.AddServiceReceiverServiceLocationTime = function (invalid) {
                $scope.submitted = true;
                if (invalid == false) {

                    if ($scope.ServiceReceiverServiceLocationTime.StatusRequest == 1) {
                        if ($scope.NextMeeting.DateNextMeeting == undefined) $scope.NextMeeting.DateNextMeeting = 0;
                        if ($scope.NextMeeting.FromTimeNextMeeting == undefined) $scope.NextMeeting.FromTimeNextMeeting = 0;
                        if ($scope.NextMeeting.ToTimeNextMeeting == undefined) $scope.NextMeeting.ToTimeNextMeeting = 0;


                        if ($scope.NextMeeting.DateNextMeeting == "" || $scope.NextMeeting.DateNextMeeting == 0) $("#DateNextMeetingid").show();
                        else $("#DateNextMeetingid").hide();

                        if ($scope.NextMeeting.FromTimeNextMeeting == "" || $scope.NextMeeting.FromTimeNextMeeting == 0) $("#FromTimeNextMeetingid").show();
                        else $("#FromTimeNextMeetingid").hide();

                        if ($scope.NextMeeting.ToTimeNextMeeting == "" || $scope.NextMeeting.ToTimeNextMeeting == 0) $("#ToTimeNextMeetingid").show()
                        else $("#ToTimeNextMeetingid").hide();

                        $scope.ServiceReceiverServiceLocationTime.NextMeeting = $scope.NextMeeting.DateNextMeeting + "," + $scope.NextMeeting.FromTimeNextMeeting + "-" + $scope.NextMeeting.ToTimeNextMeeting;
                    }
                    $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverRequest.Actions.AddServiceReceiverRequest())', {
                        "Param": $scope.ServiceReceiverServiceLocationTime
                    }).success(function (response) {
                        $("#AddTimeServiceProvided").modal("hide");
                        if (response.Resualt) {
                            NotifyCustom(response.Messages, 'success');
                            $scope.Realod();
                        }
                        else {
                            NotifyCustom(response.Messages, 'danger');
                        }
                        $scope.ServiceReceiverServiceLocationTime = {};
                        $scope.NextMeeting = {};
                        $("#DateNextMeetingid").hide();
                        $("#FromTimeNextMeetingid").hide();
                        $("#ToTimeNextMeetingid").hide();
                    });

                    $scope.submitted = false;
                    $scope.Realod();

                }
            }

            $scope.ShowTimeService = function (Id) {
                $(".notRecord").css("display", "none");
                $scope.$parent.showforReceiver = false;

                $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverRequest.Actions.LoadServiceRequests())', { "ServiceReceiverServiceLocationId": Id }).success(function (response) {

                    if (response.Result) {
                        $scope.$parent.ServiceReceiverRequest = response.Temp;
                        $(".btn-confirm a").remove()
                        if (response.Temp == "") {
                            $(".notRecord").css("display", "table-row");
                        }
                        $("#ListServiceReceiverRequests").modal("show");

                    }
                    else {
                        NotifyCustom(response.Messages, 'danger');
                    }
                });
            }
            $scope.Cancel = function () {
                $scope.submitted = false;
                $scope.ServiceReceiverServiceLocationTime = {};
                $scope.NextMeeting = {};
            }

            $scope.checkvalidation = function () {
                if ($scope.NextMeeting.DateNextMeeting == undefined) $scope.NextMeeting.DateNextMeeting = 0;
                if ($scope.NextMeeting.FromTimeNextMeeting == undefined) $scope.NextMeeting.FromTimeNextMeeting = 0;
                if ($scope.NextMeeting.ToTimeNextMeeting == undefined) $scope.NextMeeting.ToTimeNextMeeting = 0;


                if ($scope.NextMeeting.DateNextMeeting == "" || $scope.NextMeeting.DateNextMeeting == 0) $("#DateNextMeetingid").show();
                else $("#DateNextMeetingid").hide();

                if ($scope.NextMeeting.FromTimeNextMeeting == "" || $scope.NextMeeting.FromTimeNextMeeting == 0) $("#FromTimeNextMeetingid").show();
                else $("#FromTimeNextMeetingid").hide();

                if ($scope.NextMeeting.ToTimeNextMeeting == "" || $scope.NextMeeting.ToTimeNextMeeting == 0) $("#ToTimeNextMeetingid").show()
                else $("#ToTimeNextMeetingid").hide();

            }
            $scope.CalcPrice = function (isvalid) {
                if (isvalid == false) {
                    $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverRequest.Actions.loadPrice())', {
                        "ServiceId":TemoServiceId,
                        "Param": $scope.ServiceReceiverServiceLocationTime
                    }).success(function (response) {
                        if (response.Result) {
                            $scope.ServiceReceiverServiceLocationTime.PriceCalcBySystem = response.Price;
                            $("#PriceCalcBySystem").text("مبلغ محاسبه شده توسط سیستم : " +response.Price + " تومان ");
                        }
                    });
                }
            }
            $scope.ChangeStatusToFinal = function (status, id) {
                $http.post('@Url.Action(MVC.PrivateTrain.ServiceReceiverServiceLocation.Actions.ChangeStatusRequest())', { "ServiceReceiverServiceLocationId": id, "Status": status }).success(function (response) {
                    if (response.Resualt) {
                        $scope.Realod();
                        NotifyCustom(response.Messages, 'success');

                    }
                    else {
                        NotifyCustom(response.Messages, 'danger');
                    }
                });
            }

        });

    </script>

}




