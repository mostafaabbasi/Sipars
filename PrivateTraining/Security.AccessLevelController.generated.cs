// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PrivateTraining.Areas.Security.Controllers
{
    public partial class AccessLevelController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccessLevelController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetListActionNames()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetListActionNames);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetsubListActionNames()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetsubListActionNames);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> AddActionInGroup()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddActionInGroup);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> DeleteActionAccessLevel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteActionAccessLevel);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetListUserActionNames()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetListUserActionNames);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> AddUserAccess()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddUserAccess);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> DeleteUserAccess()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteUserAccess);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccessLevelController Actions { get { return MVC.Security.AccessLevel; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Security";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "AccessLevel";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "AccessLevel";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ActionInGroup = "ActionInGroup";
            public readonly string GetActionAccessLevel = "GetActionAccessLevel";
            public readonly string GetListActionNames = "GetListActionNames";
            public readonly string GetsubListActionNames = "GetsubListActionNames";
            public readonly string AddActionInGroup = "AddActionInGroup";
            public readonly string DeleteActionAccessLevel = "DeleteActionAccessLevel";
            public readonly string UserAccess = "UserAccess";
            public readonly string GetUserAccessLevel = "GetUserAccessLevel";
            public readonly string GetListUserActionNames = "GetListUserActionNames";
            public readonly string AddUserAccess = "AddUserAccess";
            public readonly string DeleteUserAccess = "DeleteUserAccess";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ActionInGroup = "ActionInGroup";
            public const string GetActionAccessLevel = "GetActionAccessLevel";
            public const string GetListActionNames = "GetListActionNames";
            public const string GetsubListActionNames = "GetsubListActionNames";
            public const string AddActionInGroup = "AddActionInGroup";
            public const string DeleteActionAccessLevel = "DeleteActionAccessLevel";
            public const string UserAccess = "UserAccess";
            public const string GetUserAccessLevel = "GetUserAccessLevel";
            public const string GetListUserActionNames = "GetListUserActionNames";
            public const string AddUserAccess = "AddUserAccess";
            public const string DeleteUserAccess = "DeleteUserAccess";
        }


        static readonly ActionParamsClass_GetActionAccessLevel s_params_GetActionAccessLevel = new ActionParamsClass_GetActionAccessLevel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetActionAccessLevel GetActionAccessLevelParams { get { return s_params_GetActionAccessLevel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetActionAccessLevel
        {
            public readonly string word = "word";
        }
        static readonly ActionParamsClass_GetListActionNames s_params_GetListActionNames = new ActionParamsClass_GetListActionNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListActionNames GetListActionNamesParams { get { return s_params_GetListActionNames; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListActionNames
        {
            public readonly string groupId = "groupId";
            public readonly string word = "word";
        }
        static readonly ActionParamsClass_GetsubListActionNames s_params_GetsubListActionNames = new ActionParamsClass_GetsubListActionNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetsubListActionNames GetsubListActionNamesParams { get { return s_params_GetsubListActionNames; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetsubListActionNames
        {
            public readonly string ActionId = "ActionId";
            public readonly string word = "word";
        }
        static readonly ActionParamsClass_AddActionInGroup s_params_AddActionInGroup = new ActionParamsClass_AddActionInGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddActionInGroup AddActionInGroupParams { get { return s_params_AddActionInGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddActionInGroup
        {
            public readonly string ActionId = "ActionId";
            public readonly string GroupId = "GroupId";
        }
        static readonly ActionParamsClass_DeleteActionAccessLevel s_params_DeleteActionAccessLevel = new ActionParamsClass_DeleteActionAccessLevel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteActionAccessLevel DeleteActionAccessLevelParams { get { return s_params_DeleteActionAccessLevel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteActionAccessLevel
        {
            public readonly string accesslevelgroupid = "accesslevelgroupid";
        }
        static readonly ActionParamsClass_GetUserAccessLevel s_params_GetUserAccessLevel = new ActionParamsClass_GetUserAccessLevel();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetUserAccessLevel GetUserAccessLevelParams { get { return s_params_GetUserAccessLevel; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetUserAccessLevel
        {
            public readonly string word = "word";
        }
        static readonly ActionParamsClass_GetListUserActionNames s_params_GetListUserActionNames = new ActionParamsClass_GetListUserActionNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetListUserActionNames GetListUserActionNamesParams { get { return s_params_GetListUserActionNames; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetListUserActionNames
        {
            public readonly string groupId = "groupId";
            public readonly string word = "word";
        }
        static readonly ActionParamsClass_AddUserAccess s_params_AddUserAccess = new ActionParamsClass_AddUserAccess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddUserAccess AddUserAccessParams { get { return s_params_AddUserAccess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddUserAccess
        {
            public readonly string ActionId = "ActionId";
            public readonly string UserId = "UserId";
        }
        static readonly ActionParamsClass_DeleteUserAccess s_params_DeleteUserAccess = new ActionParamsClass_DeleteUserAccess();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteUserAccess DeleteUserAccessParams { get { return s_params_DeleteUserAccess; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteUserAccess
        {
            public readonly string accessleveluserid = "accessleveluserid";
            public readonly string userid = "userid";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DeleteAccess = "_DeleteAccess";
                public readonly string _DeleteAccess_cshtml = "_DeleteAccess_cshtml";
                public readonly string ActionInGroup = "ActionInGroup";
                public readonly string UserAccess = "UserAccess";
                public readonly string UserAccess_cshtml = "UserAccess_cshtml";
            }
            public readonly string _DeleteAccess = "~/Areas/Security/Views/AccessLevel/_DeleteAccess.cshtml";
            public readonly string _DeleteAccess_cshtml = "~/Areas/Security/Views/AccessLevel/_DeleteAccess.cshtml";
            public readonly string ActionInGroup = "~/Areas/Security/Views/AccessLevel/ActionInGroup.cshtml";
            public readonly string UserAccess = "~/Areas/Security/Views/AccessLevel/UserAccess.cshtml";
            public readonly string UserAccess_cshtml = "~/Areas/Security/Views/AccessLevel/UserAccess.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AccessLevelController : PrivateTraining.Areas.Security.Controllers.AccessLevelController
    {
        public T4MVC_AccessLevelController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ActionInGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> ActionInGroup()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ActionInGroup);
            ActionInGroupOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void GetActionAccessLevelOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string word);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetActionAccessLevel(string word)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetActionAccessLevel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "word", word);
            GetActionAccessLevelOverride(callInfo, word);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetListActionNamesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int groupId, string word);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetListActionNames(int groupId, string word)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetListActionNames);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "groupId", groupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "word", word);
            GetListActionNamesOverride(callInfo, groupId, word);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetsubListActionNamesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int ActionId, string word);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetsubListActionNames(int ActionId, string word)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetsubListActionNames);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ActionId", ActionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "word", word);
            GetsubListActionNamesOverride(callInfo, ActionId, word);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void AddActionInGroupOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int ActionId, int GroupId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> AddActionInGroup(int ActionId, int GroupId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddActionInGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ActionId", ActionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "GroupId", GroupId);
            AddActionInGroupOverride(callInfo, ActionId, GroupId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void DeleteActionAccessLevelOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int accesslevelgroupid);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> DeleteActionAccessLevel(int accesslevelgroupid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteActionAccessLevel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "accesslevelgroupid", accesslevelgroupid);
            DeleteActionAccessLevelOverride(callInfo, accesslevelgroupid);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void UserAccessOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> UserAccess()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UserAccess);
            UserAccessOverride(callInfo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void GetUserAccessLevelOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string word);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetUserAccessLevel(string word)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetUserAccessLevel);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "word", word);
            GetUserAccessLevelOverride(callInfo, word);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void GetListUserActionNamesOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int groupId, string word);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> GetListUserActionNames(int groupId, string word)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetListUserActionNames);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "groupId", groupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "word", word);
            GetListUserActionNamesOverride(callInfo, groupId, word);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void AddUserAccessOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int ActionId, int UserId);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> AddUserAccess(int ActionId, int UserId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.AddUserAccess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ActionId", ActionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "UserId", UserId);
            AddUserAccessOverride(callInfo, ActionId, UserId);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

        [NonAction]
        partial void DeleteUserAccessOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int accessleveluserid, int userid);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.JsonResult> DeleteUserAccess(int accessleveluserid, int userid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteUserAccess);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "accessleveluserid", accessleveluserid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userid", userid);
            DeleteUserAccessOverride(callInfo, accessleveluserid, userid);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.JsonResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
