//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PrivateTraining.irSms {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="API_SMSServerBinding", Namespace="http://www.SMSit.Ir/Api-Services/sms_sender.php")]
    public partial class API_SMSServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendsmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRealMessageStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback Recive_smsOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_recivesmsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public API_SMSServer() {
            this.Url = global::PrivateTraining.Properties.Settings.Default.PrivateTraining_ir_sms_API_SMSServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sendsmsCompletedEventHandler sendsmsCompleted;
        
        /// <remarks/>
        public event getRealMessageStatusesCompletedEventHandler getRealMessageStatusesCompleted;
        
        /// <remarks/>
        public event getCreditCompletedEventHandler getCreditCompleted;
        
        /// <remarks/>
        public event Recive_smsCompletedEventHandler Recive_smsCompleted;
        
        /// <remarks/>
        public event get_recivesmsCompletedEventHandler get_recivesmsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sms.mega-tech.ir/Api-Services/sms_sender.php/sendsms", RequestNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php", ResponseNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string sendsms(string smsid, string username, string password, string text, string recivers, string udh) {
            object[] results = this.Invoke("sendsms", new object[] {
                        smsid,
                        username,
                        password,
                        text,
                        recivers,
                        udh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendsmsAsync(string smsid, string username, string password, string text, string recivers, string udh) {
            this.sendsmsAsync(smsid, username, password, text, recivers, udh, null);
        }
        
        /// <remarks/>
        public void sendsmsAsync(string smsid, string username, string password, string text, string recivers, string udh, object userState) {
            if ((this.sendsmsOperationCompleted == null)) {
                this.sendsmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendsmsOperationCompleted);
            }
            this.InvokeAsync("sendsms", new object[] {
                        smsid,
                        username,
                        password,
                        text,
                        recivers,
                        udh}, this.sendsmsOperationCompleted, userState);
        }
        
        private void OnsendsmsOperationCompleted(object arg) {
            if ((this.sendsmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendsmsCompleted(this, new sendsmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sms.mega-tech.ir/Api-Services/sms_sender.php/getRealMessageStatuses", RequestNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php", ResponseNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getRealMessageStatuses(string smsid, string username, string password, string follows) {
            object[] results = this.Invoke("getRealMessageStatuses", new object[] {
                        smsid,
                        username,
                        password,
                        follows});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRealMessageStatusesAsync(string smsid, string username, string password, string follows) {
            this.getRealMessageStatusesAsync(smsid, username, password, follows, null);
        }
        
        /// <remarks/>
        public void getRealMessageStatusesAsync(string smsid, string username, string password, string follows, object userState) {
            if ((this.getRealMessageStatusesOperationCompleted == null)) {
                this.getRealMessageStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRealMessageStatusesOperationCompleted);
            }
            this.InvokeAsync("getRealMessageStatuses", new object[] {
                        smsid,
                        username,
                        password,
                        follows}, this.getRealMessageStatusesOperationCompleted, userState);
        }
        
        private void OngetRealMessageStatusesOperationCompleted(object arg) {
            if ((this.getRealMessageStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRealMessageStatusesCompleted(this, new getRealMessageStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sms.mega-tech.ir/Api-Services/sms_sender.php/getCredit", RequestNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php", ResponseNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string getCredit(string smsid, string username, string password) {
            object[] results = this.Invoke("getCredit", new object[] {
                        smsid,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCreditAsync(string smsid, string username, string password) {
            this.getCreditAsync(smsid, username, password, null);
        }
        
        /// <remarks/>
        public void getCreditAsync(string smsid, string username, string password, object userState) {
            if ((this.getCreditOperationCompleted == null)) {
                this.getCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCreditOperationCompleted);
            }
            this.InvokeAsync("getCredit", new object[] {
                        smsid,
                        username,
                        password}, this.getCreditOperationCompleted, userState);
        }
        
        private void OngetCreditOperationCompleted(object arg) {
            if ((this.getCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCreditCompleted(this, new getCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sms.mega-tech.ir/Api-Services/sms_sender.php/Recive_sms", RequestNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php", ResponseNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Recive_sms(string smsid, string username, string password, string count) {
            object[] results = this.Invoke("Recive_sms", new object[] {
                        smsid,
                        username,
                        password,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Recive_smsAsync(string smsid, string username, string password, string count) {
            this.Recive_smsAsync(smsid, username, password, count, null);
        }
        
        /// <remarks/>
        public void Recive_smsAsync(string smsid, string username, string password, string count, object userState) {
            if ((this.Recive_smsOperationCompleted == null)) {
                this.Recive_smsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecive_smsOperationCompleted);
            }
            this.InvokeAsync("Recive_sms", new object[] {
                        smsid,
                        username,
                        password,
                        count}, this.Recive_smsOperationCompleted, userState);
        }
        
        private void OnRecive_smsOperationCompleted(object arg) {
            if ((this.Recive_smsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Recive_smsCompleted(this, new Recive_smsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://sms.mega-tech.ir/Api-Services/sms_sender.php/get_recivesms", RequestNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php", ResponseNamespace="http://www.SMSit.Ir/Api-Services/sms_sender.php")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string get_recivesms(string smsid, string username, string password, string start, string end, string nowork) {
            object[] results = this.Invoke("get_recivesms", new object[] {
                        smsid,
                        username,
                        password,
                        start,
                        end,
                        nowork});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void get_recivesmsAsync(string smsid, string username, string password, string start, string end, string nowork) {
            this.get_recivesmsAsync(smsid, username, password, start, end, nowork, null);
        }
        
        /// <remarks/>
        public void get_recivesmsAsync(string smsid, string username, string password, string start, string end, string nowork, object userState) {
            if ((this.get_recivesmsOperationCompleted == null)) {
                this.get_recivesmsOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_recivesmsOperationCompleted);
            }
            this.InvokeAsync("get_recivesms", new object[] {
                        smsid,
                        username,
                        password,
                        start,
                        end,
                        nowork}, this.get_recivesmsOperationCompleted, userState);
        }
        
        private void Onget_recivesmsOperationCompleted(object arg) {
            if ((this.get_recivesmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_recivesmsCompleted(this, new get_recivesmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void sendsmsCompletedEventHandler(object sender, sendsmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendsmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendsmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRealMessageStatusesCompletedEventHandler(object sender, getRealMessageStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRealMessageStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRealMessageStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCreditCompletedEventHandler(object sender, getCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void Recive_smsCompletedEventHandler(object sender, Recive_smsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recive_smsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Recive_smsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void get_recivesmsCompletedEventHandler(object sender, get_recivesmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_recivesmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_recivesmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591